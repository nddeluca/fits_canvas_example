// Generated by CoffeeScript 1.4.0
(function() {

  describe("Feature Test", function() {
    return it('can initialize typed arrays using buffers', function() {
      var buffer, method1, method2, xhr;
      method1 = function(buffer) {
        var img, index, length, value, _i, _ref;
        img = new Uint16Array(buffer);
        length = img.length;
        for (index = _i = 0, _ref = length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {
          value = img[index];
          img[index] = ((value & 0xFF) << 8) | ((value >> 8) & 0xFF);
        }
        return img;
      };
      method2 = function(buffer) {
        var img, index, pixels, value, view, _i, _len;
        view = new DataView(buffer);
        pixels = buffer.byteLength / 2;
        img = new Uint16Array(pixels);
        for (index = _i = 0, _len = img.length; _i < _len; index = ++_i) {
          value = img[index];
          img[index] = view.getInt16(2 * index);
        }
        return img;
      };
      buffer = null;
      xhr = new XMLHttpRequest();
      xhr.open('GET', 'data/m101.fits');
      xhr.responseType = 'arraybuffer';
      xhr.onload = function() {
        return buffer = xhr.response;
      };
      xhr.send();
      waitsFor(function() {
        return buffer != null;
      });
      return runs(function() {
        var begin, e1, e2, end, height, img1, img2, imgBuffer1, imgBuffer2, s1, s2, width;
        width = 891;
        height = 893;
        begin = 14400;
        end = begin + 2 * width * height;
        imgBuffer1 = buffer.slice(begin, end);
        imgBuffer2 = buffer.slice(begin, end);
        s1 = new Date().getTime();
        img1 = method1(imgBuffer1);
        e1 = new Date().getTime();
        s2 = new Date().getTime();
        img2 = method2(imgBuffer2);
        e2 = new Date().getTime();
        console.log(img1[0], e1 - s1);
        return console.log(img2[0], e2 - s2);
      });
    });
  });

}).call(this);
